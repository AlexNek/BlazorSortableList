@using Microsoft.JSInterop
@implements IAsyncDisposable
@inject IJSRuntime JS

<div class="my-component">
    This component is defined in the <strong>BlazorSortableList.Lib</strong> library.
    <br>
    <button @onclick="ShowPrompt">Call showPrompt</button>
    @if (!string.IsNullOrEmpty(result))
    {
        <p>
            Hello @result!
        </p>
    }
    <p>@testStr</p>
</div>

@code {
    private IJSObjectReference? module;
    private string? result;

    private string testStr = "init";
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            testStr = "First Render";
            /*
                Change the {PATH} placeholder in the next line to the path of
                the collocated JS file in the app. Examples:

                ./Components/Pages/JsCollocation2.razor.js (.NET 8 or later)
                ./Pages/JsCollocation2.razor.js (.NET 7 or earlier)
            */
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                         "./_content/BlazorSortableList/exampleJsInterop.js");
        }
    }

    public async void ShowPrompt()
    {
        testStr = "show prompt";
        await JS.InvokeVoidAsync("console.log", $"**show prompt");
        if (module is not null)
        {
            result = await module.InvokeAsync<string>(
                         "showPrompt", "What's your name?");
            StateHasChanged();
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}